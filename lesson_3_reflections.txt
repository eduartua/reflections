When would you want to use a remote repository rather than keeping all your work
local?

    The best advantage of having all my code on a remote repository is that it can be shared with others developers to work collaboratively. also it is a way of having everything backed up.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    In that case an automation process is better because the most important changes are going to be created locally not in the remote. So, most changes created on the remote can be addressed to the local repo whenever they happen.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Fork: this is useful for exploring other projects. Also, if you want to be part of a team that is working collaboratively in a project, fork fits perfect here.
    Clone: Fits perfect when you want to just explore a project without think about contribute at all.
    Branches: They are used to manage different versions of a project, features, fixing bugs within a repository, in order to have a working version avoiding to broke it.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Fill in your answer here

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
